/* Generated by apex-mocks-generator version 4.0.1 */
@isTest
public class Mocks {
  public class SecurityServiceMockImpl implements SecurityService {
    private fflib_ApexMocks mocks;

    public SecurityServiceMockImpl(fflib_ApexMocks mocks) {
      this.mocks = mocks;
    }

    public Boolean isCurrentUserAllowedToUpdate(String userName) {
      return (Boolean) mocks.mockNonVoidMethod(this, 'isCurrentUserAllowedToUpdate', new List<Type>{ System.Type.forName('String') }, new List<Object>{ userName });
    }
  }

  public class OpportunityRepositoryMockImpl implements OpportunityRepository {
    private fflib_ApexMocks mocks;

    public OpportunityRepositoryMockImpl(fflib_ApexMocks mocks) {
      this.mocks = mocks;
    }

    public Boolean insertOpportunityLineitem(List<OpportunityLineItem> oppLineItemList) {
      return (Boolean) mocks.mockNonVoidMethod(this, 'insertOpportunityLineitem', new List<Type>{ System.Type.forName('List<OpportunityLineItem>') }, new List<Object>{ oppLineItemList });
    }
  }
}